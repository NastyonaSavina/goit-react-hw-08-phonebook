{"version":3,"file":"static/js/589.121f82a7.chunk.js","mappings":"wQAQMA,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAsGZ,UAlGqB,WAEjB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAASN,GAArC,eAAOS,EAAP,KAAeC,EAAf,KAGMC,EAAe,SAAAC,GACjB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOb,EAAf,EAAeA,KAEfS,GAAU,SAAAK,GAAI,yBAAUA,GAAV,cAAiBd,EAAOa,GAAxB,GACjB,EAGKE,EAAY,mCAAG,WAAOJ,GAAP,wEACjBA,EAAMK,iBADW,SAIjBT,GAAa,GAJI,SAKXJ,GAASc,EAAAA,EAAAA,IAAST,IAASU,SALhB,OAQjBX,GAAa,GACbY,EAAAA,GAAAA,QAAc,YATG,gDAWjBC,QAAQC,IAAR,MACAF,EAAAA,GAAAA,MAAY,cAZK,yDAAH,sDAiBlB,OACI,gCACKb,IAAa,wCAEd,kBAAMgB,OAAO,IAAIC,UAAU,mBAAmBC,MAAO,CAAEC,MAAO,SAAWC,SAAUX,EAAnF,WACI,eAAIQ,UAAU,oBAAd,6BAED,iBAAKA,UAAU,qBAAf,WACK,kBACII,GAAG,OACH3B,KAAK,OACL4B,KAAK,OACLC,aAAa,MACbhB,MAAOL,EAAOR,KACd8B,SAAUpB,EACVa,UAAU,eACVQ,UAAQ,KAEZ,kBAAOC,QAAQ,OAAf,mCAIJ,iBAAKT,UAAU,qBAAf,WACI,kBACII,GAAG,QACH3B,KAAK,QACL4B,KAAK,QACLC,aAAa,WACbhB,MAAOL,EAAOP,MACd6B,SAAUpB,EACVa,UAAU,eACVQ,UAAQ,KAEZ,kBAAOC,QAAQ,QAAf,+BAKJ,iBAAKT,UAAU,qBAAf,WACI,kBACII,GAAG,WACH3B,KAAK,WACL4B,KAAK,WACLC,aAAa,mBACbhB,MAAOL,EAAON,SACd4B,SAAUpB,EACVa,UAAU,eACVQ,UAAQ,KAEZ,kBAAOC,QAAQ,WAAf,gDAKJ,mBAAQT,UAAU,oCAAoCK,KAAK,SAA3D,sBAIC,SAAC,KAAD,CAAMK,GAAG,SAASV,UAAU,eAA5B,2CAOhB,C","sources":["pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { register } from \"redux/auth/auth.operations\";\n\n\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\n\nconst RegisterPage = () => {\n\n    const dispatch = useDispatch();\n    const [isLoading, setIsLoading] = useState(false);\n    const [values, setValues] = useState(initialState);\n    \n\n    const handleChange = event => {\n        const { value, name } = event.target;\n        \n        setValues(prev => ({ ...prev, [name]: value }));\n    };\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n    try {\n        setIsLoading(true);\n        await dispatch(register(values)).unwrap();\n\n\n        setIsLoading(false);\n        toast.success('Success!');\n        } catch (e) {\n        console.log(e);\n        toast.error('Some error');\n        }\n    };\n\n\n    return (\n        <>\n            {isLoading && <p>Loading ...</p>}\n\n            <form action=\"#\" className=\"mt-5 mx-auto p-0\" style={{ width: '450px' }} onSubmit={handleSubmit} >\n                <h1 className=\"h3 mb-3 fw-normal\">Please sing up</h1>\n\n               <div className=\"form-floating my-4\">\n                    <input\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        value={values.name}\n                        onChange={handleChange}\n                        className=\"form-control\"\n                        required\n                    />\n                    <label htmlFor=\"name\">First & Last Name</label>\n                \n                </div>\n                \n                <div className=\"form-floating my-4\">\n                    <input\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        autoComplete=\"username\"\n                        value={values.email}\n                        onChange={handleChange}\n                        className=\"form-control\"\n                        required\n                    />\n                    <label htmlFor=\"email\">Email address</label>\n                </div>\n\n            \n\n                <div className=\"form-floating my-4\">\n                    <input\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        value={values.password}\n                        onChange={handleChange}\n                        className=\"form-control\"\n                        required\n                    />\n                    <label htmlFor=\"password\">Password (at least 7 symbols) </label>\n                </div>\n\n             \n\n                <button className=\"w-100 mt-2 btn btn-lg btn-primary\" type=\"submit\" >\n                    Sign up\n                </button>\n\n                 <Link to=\"/login\" className=\"d-block my-4\">\n                    Already have an account?\n                </Link>\n            </form>\n\n        </>\n    );\n};\n\nexport default RegisterPage;"],"names":["initialState","name","email","password","dispatch","useDispatch","useState","isLoading","setIsLoading","values","setValues","handleChange","event","target","value","prev","handleSubmit","preventDefault","register","unwrap","toast","console","log","action","className","style","width","onSubmit","id","type","autoComplete","onChange","required","htmlFor","to"],"sourceRoot":""}