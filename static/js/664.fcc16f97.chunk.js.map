{"version":3,"file":"static/js/664.fcc16f97.chunk.js","mappings":"kRAWMA,EAAe,CACnBC,MAAO,GACPC,SAAU,IAuEZ,UApEkB,WAEhB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAGf,GAA4BC,EAAAA,EAAAA,UAASP,GAArC,eAAOQ,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACjB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACfL,GAAU,SAAAM,GAAI,yBAAUA,GAAV,cAAiBD,EAAOD,GAAxB,GACjB,EAEKG,EAAY,mCAAG,WAAML,GAAN,8EACnBA,EAAMM,iBACAC,EAAOP,EAAMQ,cAFA,kBAKXhB,GAASiB,EAAAA,EAAAA,IAAMZ,IAASa,SALb,OAMjBH,EAAKI,QACLC,EAAAA,GAAAA,QAAc,WACdlB,EAAS,YAAa,CAAEmB,SAAS,IARhB,kDAUjBD,EAAAA,GAAAA,MAAY,SAVK,0DAAH,sDAgBjB,OACD,+BAEE,kBAAME,OAAO,IAAIC,UAAU,mBAAmBC,MAAO,CAAEC,MAAO,SAAWC,SAAUb,EAAnF,WACE,eAAIU,UAAU,oBAAd,yBAEA,iBAAKA,UAAU,qBAAf,WACE,kBACEI,KAAK,OACLC,GAAG,QACHjB,KAAK,QACLD,MAAOL,EAAOP,MACd+B,SAAUtB,EACVgB,UAAU,kBAEZ,kBAAOO,QAAQ,QAAf,+BAGF,iBAAKP,UAAU,qBAAf,WACE,kBACEK,GAAG,WACHD,KAAK,WACLhB,KAAK,WACLD,MAAOL,EAAON,SACd8B,SAAUtB,EACVgB,UAAU,kBAGZ,kBAAOO,QAAQ,WAAf,0BAGF,mBAAQH,KAAK,SAASJ,UAAU,kBAAhC,yBAMP,C","sources":["pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { logIn } from \"redux/auth/auth.operations\";\n\n\n\n\nconst initialState = {\n  email: '',\n  password: '',\n};\n\nconst LoginPage = () => { \n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n\n    const [values, setValues] = useState(initialState);\n\n    const handleChange = event => {\n        const { value, name } = event.target;\n        setValues(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleSubmit = async event => {\n      event.preventDefault();\n      const form = event.currentTarget;\n\n      try {\n        await dispatch(logIn(values)).unwrap();\n        form.reset();\n        toast.success('Success');\n        navigate('/contacts', { replace: true });\n        } catch {\n        toast.error('Error');\n        }\n    };\n\n\n\n     return (\n    <>\n\n      <form action=\"#\" className=\"mt-5 mx-auto p-0\" style={{ width: '450px' }} onSubmit={handleSubmit} >\n        <h1 className=\"h3 mb-3 fw-normal\">Login page</h1>\n\n        <div className=\"form-floating my-4\">\n          <input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            className=\"form-control\"\n          />\n          <label htmlFor=\"email\" >Email address</label>\n        </div>\n\n        <div className=\"form-floating my-4\">\n          <input\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            className=\"form-control\"\n                         \n          />\n          <label htmlFor=\"password\">Password</label>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Sign in\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default LoginPage;"],"names":["initialState","email","password","dispatch","useDispatch","navigate","useNavigate","useState","values","setValues","handleChange","event","target","value","name","prev","handleSubmit","preventDefault","form","currentTarget","logIn","unwrap","reset","toast","replace","action","className","style","width","onSubmit","type","id","onChange","htmlFor"],"sourceRoot":""}